#!/bin/bash

set -x
set -euC



CORES=4
TESTMODE=0
current_tmpdir=

trap clean EXIT
trap exit INT

function clean () {
  title clean
  [ -d "$current_tmpdir" ] && /bin/rm -rf "$current_tmpdir"
  [ "$LOCKED" = 1 ] && /bin/rm "$LOCKFILE"
}

function die () {
  echo "$1"
  exit 1
}

function filter () {
  sort | \
    if [ "$TESTMODE" = 1 ]
    then
      head -n 10
    else
      cat
    fi
}

function title () {
  # shellcheck disable=1117
  echo -e "\e[40m\e[1;34m$1\e[0;39m"
}


LOCKFILE="/tmp/cbz-make.lock"
LOCKED=0

function lock () {
  if [ -e "$LOCKFILE" ]
  then
    title "wait other tasks"
    while [ -e "$LOCKFILE" ]
    do
      sleep 2
    done
  fi
  touch "$LOCKFILE"
  LOCKED=1
}

function main () {
  local curdir="$PWD"
  local src="$1"

  [ -z "$src" ] && die "Usage: $0 <PDF_FILEPATH>"

  local ext filename tmpdir

  ext="$(echo "${src##*.}" | tr '[:upper:]' '[:lower:]')"
  filename="$(basename "${src%.*}")"
  if [[ "$filename" =~ ^[0-9]+ ]]
  then
    filename="$(basename "$(dirname "$src")") ${filename}"
  fi

  title "     start     "
  echo "$filename"

  local sub="sd"

  # dst=`dirname "$src"`/"${filename}.cbz"
  local dst=/mnt/syno/data/device/kobo-aura-one/"$sub/${filename}.cbz"

  title "mktemp"
  tmpdir="$(mktemp -d)"
  current_tmpdir="$tmpdir"

  title "mkdirs"
  mkdir "$tmpdir/original"
  mkdir "$tmpdir/resized"
  mkdir "$tmpdir/unpack"

  case "$ext" in
    pdf)
      title "pdfimages"
      pdfimages "$src" "$tmpdir/original/pdf"
      ;;
    zip|rar)
      title "unpack"
      aunpack -q -X "$tmpdir/unpack/" "$src"
      # unzip -q -j -d "$tmpdir/unpack/" "$src"
      find "$tmpdir/unpack/" -type f | sort | nl -w4 -n rz -s : | while read -r it
      do
        num="$(echo "$it" | cut -d: -f1)"
        ext="${it##*.}"
        path="$(echo "$it" | cut -d: -f2-)"
        mv "$path" "$tmpdir/original/${num}.${ext}"
      done
      ;;
  esac

  title "resize"
  cd "$tmpdir/original"
  find . -type f | filter | while read -r it
  do
    if [ -f "$it" ]
    then
      local itdir
      itdir=../resized/"$(dirname "$it")"
      [ -d "$itdir" ] || mkdir -p "$itdir"
      local png="${it%.*}.png"
      local out="\"../resized/$png\""
      # 小さすぎる出力は失敗の可能性が高い。 -gt 2000
      printf 'cbz-convert %q %s' "$it" "$out"
      echo ''
    fi
  done | parallel --eta -P "$CORES" sh -c

  title "apack"
  cd "$tmpdir/resized"
  [ -f "$dst" ] && /bin/rm "$dst"
  # local content_files
  # mapfile content_files <(echo ./*.* | sort -n)
  # echo apack -F zip "$dst" "${content_files[@]}"
  apack -F zip "$dst" ./*.*


  title "clean"
  /bin/rm -rf "$tmpdir"

  title "finish"
  echo "Generated in: $dst"

  cd "$curdir"

  # REF
  # mieki256's diary - ImageMagickとシャープ化
  # http://blawat2015.no-ip.com/~mieki256/diary/2004112610.html
  #
  # ImageMagick: Command-line Tools: Convert
  # http://www.imagemagick.org/script/convert.php
}


lock
for filepath in "$@"
do
  main "$filepath"
done
